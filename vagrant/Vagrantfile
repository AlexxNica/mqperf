VAGRANTFILE_API_VERSION = "2"
 
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # http://www.vagrantbox.es/
  config.vm.box = "ubuntu-12.04-docker"
  config.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/latest/ubuntu-12.04-amd64-vbox.box"
 
  # Sets the ip we'll use to access the box
  config.vm.network :private_network, ip: "10.0.0.10"
  config.vm.hostname = "mqperf"
 
  # Configures the amount of RAM
  config.vm.provider "virtualbox" do |box|
    box.customize ["modifyvm", :id, "--memory", "1024"]
  end
 
  # We need to have the docker apt repository available
  config.vm.provision :shell, path: "setup_docker_apt.sh"

  # Specifies the chef version Opsworks is running
  config.omnibus.chef_version = "11.10.0"
 
  # Chef related configs
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "../../mqperf-chef"
    chef.log_level = :info
 
    # Config as in opsworks
    chef.json = {
      "sender" => {
        "image" => "adamw/mqperf:latest",
        "cmdline" => [ "com.softwaremill.mqperf.Sender" ],
        "env" => {
          "AWS_ACCESS_KEY_ID" => ENV['AWS_ACCESS_KEY_ID'],
          "AWS_SECRET_ACCESS_KEY" => ENV['AWS_SECRET_ACCESS_KEY']
        }
      },
      "receiver" => {
        "image" => "adamw/mqperf:latest",
        "cmdline" => [ "com.softwaremill.mqperf.Receiver" ],
        "env" => {
          "AWS_ACCESS_KEY_ID" => ENV['AWS_ACCESS_KEY_ID'],
          "AWS_SECRET_ACCESS_KEY" => ENV['AWS_SECRET_ACCESS_KEY']
        }
      },
      "mongo" => {
        "image" => "mongo",
        "docker" => "-p 27017:27017"
      },
      "rabbit" => {
        "image" => "tutum/rabbitmq",
        "docker" => "-p 5672:5672 -p 15672:15672 -e RABBITMQ_PASS='password' "
      }
    }
 
    # Chef, use this recipe:
    chef.add_recipe "docker::setup"
    chef.add_recipe "docker::kill_containers"
    chef.add_recipe "docker::rabbit"
 
    # config.vm.synced_folder "localpath", "vmpath"
  end
end